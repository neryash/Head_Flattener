package com.nerya.headflattener;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;

import android.Manifest;
import android.app.Activity;
import android.content.ContentResolver;
import android.content.ContentValues;
import android.content.Context;
import android.content.ContextWrapper;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.database.Cursor;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Matrix;
import android.media.MediaMetadataRetriever;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.util.Log;
import android.view.View;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.VideoView;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Random;
import java.util.Timer;
import java.util.TimerTask;
import java.util.concurrent.TimeUnit;

public class MainActivity extends AppCompatActivity {


    //String uri = Environment.getExternalStorageDirectory().getAbsolutePath() + "/DCIM/Camera/trial_video.mp4";
    private static final int REQUEST_TAKE_GALLERY_VIDEO = 100;
    private ArrayList<ArrayList> centerPixels;
    private ArrayList<Integer> allPixels;
    private ImageView capturedImageView, frameDisplay;
    private int[] finalPicture, wholeImage;
    ArrayList<Integer> middlePixels;
    private TextView completion;
    private boolean isWorking;
    private int time, frames;
    private long totalTime;
    private double timeInDouble, totalTimeInDouble;
    private int height;
    private Bitmap bitmap;
    public static final int MY_PERMISSIONS_REQUEST_READ_EXTERNAL_STORAGE = 123;
    //final String relativeLocation = Environment.DIRECTORY_PICTURES + File.separator + "YourSubforderName";
    private Uri uri;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        centerPixels = new ArrayList<>();
        height = 0;
        completion = findViewById(R.id.completion);
        allPixels = new ArrayList<>();
        time = 0;
        isWorking = false;
        timeInDouble = time * 0.1;
        middlePixels = new ArrayList<>();
        frames = 0;
        frameDisplay = findViewById(R.id.frameDisplay);
        //String videoPath = "android.resource://" + getPackageName() + "/" + R.raw.trial_video;
        //uri = Uri.parse(videoPath);
        capturedImageView = (ImageView) findViewById(R.id.capturedImage);
        //getFrame(uri);
        findViewById(R.id.frameDisplay).setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                Intent intent = new Intent();
                intent.setType("video/*");
                intent.setAction(Intent.ACTION_GET_CONTENT);
                startActivityForResult(Intent.createChooser(intent, "Select Video"), REQUEST_TAKE_GALLERY_VIDEO);
                //doIt();
                //int[] picture = (int[])getWholeImage().toArray();
//                int[] colorsa = {






//                        -1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,
//                        -1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,


//                        -1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1073547,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,










//                        -1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,-1050625,






};
//                //Log.i("hellol", colorsa.length + "");
                //Bitmap bitmap = Bitmap.createBitmap(colorsa,100,30, Bitmap.Config.ARGB_8888);
                //capturedImageView.setImageBitmap(bitmap);
//                Toast.makeText(MainActivity.this, "done!", Toast.LENGTH_SHORT).show();
//                Log.i("checky", finalPicture.length + "");
//                Log.i("checky", finalPicture[0] + "");
            }
        });
        //generateImage();
    }

    private void generateImage(Uri imageUri) {
        Timer timer = new Timer();
        timer.schedule(new TimerTask() {
            public void run() {
                try {
                    if(isWorking) {
                        frames++;
                        //displayFrame(uri, time);
                        //getFrameThroughTime(uri, time, timesClicked);
                        time += 50000;
                        timeInDouble = time * 0.1;

                        final MediaMetadataRetriever mediaMetadataRetriever = new MediaMetadataRetriever();

                        mediaMetadataRetriever.setDataSource(MainActivity.this, imageUri);
                        ArrayList<Integer> row = new ArrayList<>();
                        totalTime = Long.parseLong(mediaMetadataRetriever.extractMetadata(MediaMetadataRetriever.METADATA_KEY_DURATION)) * 1000;
                        totalTimeInDouble = totalTime * 0.1;
                        Bitmap bmFrame = mediaMetadataRetriever.getFrameAtTime(time, MediaMetadataRetriever.OPTION_CLOSEST); //unit in microsecond
                        runOnUiThread(new Runnable() {
                            @Override
                            public void run() {
                                frameDisplay.setImageBitmap(bmFrame);
                            }
                        });

                        //final MediaMetadataRetriever mediaMetadataRetriever = new MediaMetadataRetriever();

                        mediaMetadataRetriever.setDataSource(MainActivity.this, imageUri);
                        //centerPixels.clear();
                        //Bitmap bmFrame = mediaMetadataRetriever.getFrameAtTime(timestamp, MediaMetadataRetriever.OPTION_CLOSEST);
                        int width = bmFrame.getWidth();
                        int bitmapHeight = bmFrame.getHeight();
                        middlePixels.clear();
                        for (int i = 0; i < bitmapHeight; i++) {
                            //for(int ia = 0; ia < 10; ia++) {
                            middlePixels.add(bmFrame.getPixel(width / 2, i));
                            allPixels.add(bmFrame.getPixel(width / 2, i));
                        }
                        centerPixels.add(middlePixels);
                        wholeImage = new int[allPixels.size()];

                        for (int i = 0; i < allPixels.size(); i++) {
                            wholeImage[i] = allPixels.get(i);
                        }

                        bitmap = Bitmap.createBitmap(wholeImage, centerPixels.get(0).size(), centerPixels.size(), Bitmap.Config.ARGB_8888);
                        runOnUiThread(new Runnable() {
                            @Override
                            public void run() {
                                capturedImageView.setImageBitmap(bitmap);
                                completion.setText(round(((timeInDouble / totalTimeInDouble) * 100), 2) + "%");
                                Log.i("hello", time + " time");
                                Log.i("hello", totalTime + " total time");
                                double a = time / totalTime;
                                Log.i("hello", a + " is a");
                                Log.i("hello", ((double) (timeInDouble / totalTimeInDouble) * 100) + "");
                            }
                        });
                    }
                } catch (Exception e) {
                    Log.i("finished", e.getMessage());
                    isWorking = false;
                    if (checkPermissionREAD_EXTERNAL_STORAGE(MainActivity.this)) {
                        // do your stuff..
                        runOnUiThread(new Runnable() {
                            @Override
                            public void run() {
                                Bitmap resized = Bitmap.createScaledBitmap(bitmap, bitmap.getWidth(), bitmap.getHeight()*16, true);
                                float degrees = 90; //rotation degree
                                Matrix matrix = new Matrix();
                                matrix.setRotate(degrees);
                                Bitmap rotatedBitmap = Bitmap.createBitmap(resized, 0, 0, resized.getWidth(), resized.getHeight(), matrix, true);
                                saveToInternalStorage(rotatedBitmap);
                                completion.setText("100%");
                            }
                        });
                    }
                }
            }
        }, 0, 50);
    }
    private void SaveImage(Bitmap finalBitmap) {

        String root = Environment.getExternalStorageDirectory().toString();
        File myDir = new File(root + "/saved_images");
        if (!myDir.exists()) {
            myDir.mkdirs();
        }
        //Random generator = new Random();
        long n = System.currentTimeMillis() * 1000L;
        //n = generator.nextInt(n);
        String fname = "Image-"+ n +".jpg";
        File file = new File (myDir, fname);
        if (file.exists ())
            file.delete ();
        try {
            FileOutputStream out = new FileOutputStream(file);
            finalBitmap.compress(Bitmap.CompressFormat.JPEG, 90, out);
            out.flush();
            out.close();
            sendBroadcast(new Intent(Intent.ACTION_MEDIA_MOUNTED,
                    Uri.parse("file://" + Environment.getExternalStorageDirectory())));

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private String saveToInternalStorage(Bitmap bitmapImage){
        ContextWrapper cw = new ContextWrapper(getApplicationContext());
        // path to /data/data/yourapp/app_data/imageDir
        File directory = cw.getDir("Headflattener", Context.MODE_PRIVATE);
        // Create imageDir
        File mypath=new File(directory,"profile.jpg");

        FileOutputStream fos = null;
        try {
            fos = new FileOutputStream(mypath);
            // Use the compress method on the BitMap object to write image to the OutputStream
            bitmapImage.compress(Bitmap.CompressFormat.PNG, 100, fos);
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                fos.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        loadImageFromStorage(directory.getAbsolutePath());
        return directory.getAbsolutePath();
    }
    private void loadImageFromStorage(String path)
    {

        try {
            File f=new File(path, "profile.jpg");
            Bitmap b = BitmapFactory.decodeStream(new FileInputStream(f));
            ImageView img=(ImageView)findViewById(R.id.frameDisplay);
            img.setImageBitmap(b);
            SaveImage(b);
        }
        catch (FileNotFoundException e)
        {
            e.printStackTrace();
        }

    }
    public static double round(double value, int places) {
        if (places < 0) throw new IllegalArgumentException();

        long factor = (long) Math.pow(10, places);
        value = value * factor;
        long tmp = Math.round(value);
        return (double) tmp / factor;
    }

    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (resultCode == RESULT_OK) {
            if (requestCode == REQUEST_TAKE_GALLERY_VIDEO) {
                Uri selectedImageUri = data.getData();
                isWorking = true;
                generateImage(selectedImageUri);
            }
        }
    }
    private void saveBitmap(@NonNull final Context context, @NonNull final Bitmap bitmap,
                            @NonNull final Bitmap.CompressFormat format, @NonNull final String mimeType,
                            @NonNull final String displayName) throws IOException
    {
        final String relativeLocation = Environment.DIRECTORY_PICTURES;

        final ContentValues contentValues = new ContentValues();
        contentValues.put(MediaStore.MediaColumns.DISPLAY_NAME, displayName);
        contentValues.put(MediaStore.MediaColumns.MIME_TYPE, mimeType);
        contentValues.put(MediaStore.MediaColumns.RELATIVE_PATH, relativeLocation);

        final ContentResolver resolver = context.getContentResolver();

        OutputStream stream = null;
        Uri uri = null;

        try
        {
            final Uri contentUri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;
            uri = resolver.insert(contentUri, contentValues);

            if (uri == null)
            {
                throw new IOException("Failed to create new MediaStore record.");
            }

            stream = resolver.openOutputStream(uri);

            if (stream == null)
            {
                throw new IOException("Failed to get output stream.");
            }

            if (bitmap.compress(format, 95, stream) == false)
            {
                throw new IOException("Failed to save bitmap.");
            }
        }
        catch (IOException e)
        {
            if (uri != null)
            {
                // Don't leave an orphan entry in the MediaStore
                resolver.delete(uri, null, null);
            }

            throw e;
        }
        finally
        {
            if (stream != null)
            {
                stream.close();
            }
        }
    }
    public boolean checkPermissionREAD_EXTERNAL_STORAGE(
            final Context context) {
        int currentAPIVersion = Build.VERSION.SDK_INT;
        if (currentAPIVersion >= android.os.Build.VERSION_CODES.M) {
            if (ContextCompat.checkSelfPermission(context,
                    Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
                if (ActivityCompat.shouldShowRequestPermissionRationale(
                        (Activity) context,
                        Manifest.permission.READ_EXTERNAL_STORAGE)) {
                    showDialog("External storage", context,
                            Manifest.permission.READ_EXTERNAL_STORAGE);

                } else {
                    ActivityCompat
                            .requestPermissions(
                                    (Activity) context,
                                    new String[] { Manifest.permission.READ_EXTERNAL_STORAGE },
                                    MY_PERMISSIONS_REQUEST_READ_EXTERNAL_STORAGE);
                }
                return false;
            } else {
                return true;
            }

        } else {
            return true;
        }
    }
    public void showDialog(final String msg, final Context context,
                           final String permission) {
        AlertDialog.Builder alertBuilder = new AlertDialog.Builder(context);
        alertBuilder.setCancelable(true);
        alertBuilder.setTitle("Permission necessary");
        alertBuilder.setMessage(msg + " permission is necessary");
        alertBuilder.setPositiveButton(android.R.string.yes,
                new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialog, int which) {
                        ActivityCompat.requestPermissions((Activity) context,
                                new String[] { permission },
                                MY_PERMISSIONS_REQUEST_READ_EXTERNAL_STORAGE);
                    }
                });
        AlertDialog alert = alertBuilder.create();
        alert.show();
    }
    @Override
    public void onRequestPermissionsResult(int requestCode,
                                           String[] permissions, int[] grantResults) {
        switch (requestCode) {
            case MY_PERMISSIONS_REQUEST_READ_EXTERNAL_STORAGE:
                if (grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                    // do your stuff
                } else {
                    Toast.makeText(MainActivity.this, "GET_ACCOUNTS Denied",
                            Toast.LENGTH_SHORT).show();
                }
                break;
            default:
                super.onRequestPermissionsResult(requestCode, permissions,
                        grantResults);
        }
    }
}